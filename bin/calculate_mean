#!/usr/bin/env python

import teazertools.mean as mean
import optparse

def main():
    usage = "usage: %prog [options] basename"
    parser = optparse.OptionParser(usage)
    parser.add_option("--outputdir", help="Results are written here.")
    parser.add_option("--datadir", help="Trajectories are read from here.")
    parser.add_option("--expvals", help="Comma separated list of columns (starting with 1) in trajectory files which correspond to plain expectation values.",
                      metavar="E1,E2,...")
    parser.add_option("--variances", help="Comma separated list of columns (starting with 1) in trajectory files which correspond to variances.",
                      metavar="V1,V2,...")
    parser.add_option("--stdevs", help="Same as --variances, but for standard deviations.", metavar="S1,S2,...")
    parser.add_option("--varmeans", help="Comma separated list of the mean values which correspond to the variances V1,V2,... (this defaults to V1-1,V2-1,...)",
                      metavar="VM1,VM2,...")
    parser.add_option("--stdevmeans", help="Same as --varmeans, but for means that correspond to standard deviations (this defaults to S1-1,S2-1,...)",
                      metavar="SM1,SM2,...")
    parser.add_option("--bz2only", action="store_true", dest="bz2only", default=False,
                       help="Only consider files ending in .bz2")
    
    (options,args) = parser.parse_args()
    
    if len(args)<1:
        parser.error("Need basename as commandline argument.")
    
    kwargs = {}
    kwargs['bz2only'] = options.bz2only
    for o in ("outputdir", "datadir"):
        option = getattr(options,o)
        if option: kwargs[o] = option
    
    for o in ("expvals","variances","varmeans","stdevs","stdevmeans"):
        option = getattr(options,o)
        if option: kwargs[o] = map(int,option.split(','))
    
    basename = args[0]
    
    mean.calculateMeans(basename, **kwargs)


if __name__ == '__main__':
    main()
